apiVersion: apps/v1
kind: Deployment
metadata:
  name: setupshowroom-backend
spec:
  minReadySeconds: 15
  replicas: {{ .Values.setupshowroom.replicaCount }}
  selector:
    matchLabels:
      app: setupshowroom-backend
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: setupshowroom-backend
    spec:
      terminationGracePeriodSeconds: 90
      containers:
        - env:
            - name: SPRING_PROFILES_ACTIVE
              value: <YOUR_PRODUCTION_PROFILE>
            - name: JAVA_OPTS
              value: "-Xms512m -Xmx1536m -XX:+UseG1GC -XX:+UseStringDeduplication"
            - name: APP_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  key: APP_JWT_SECRET
                  name: setupshowroom-backend-secret
            - name: SIGHTENGINE_API_USER
              valueFrom:
                secretKeyRef:
                  key: SIGHTENGINE_API_USER
                  name: setupshowroom-backend-secret
            - name: SIGHTENGINE_API_SECRET
              valueFrom:
                secretKeyRef:
                  key: SIGHTENGINE_API_SECRET
                  name: setupshowroom-backend-secret
            - name: APP_FRONTEND_BASE_URL
              value: https://setupshowroom.com
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_DATABASE}
            - name: DB_HOST
              value: setupshowroom-db.setupshowroom.svc.cluster.local
            - name: DB_PORT
              value: "5432"
            - name: DB_DATABASE
              valueFrom:
                secretKeyRef:
                  key: DB_DATABASE
                  name: postgres-secret
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  key: DB_USERNAME
                  name: postgres-secret
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: DB_PASSWORD
                  name: postgres-secret
            - name: GOOGLE_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  key: GOOGLE_CLIENT_ID
                  name: setupshowroom-backend-secret
            - name: GOOGLE_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  key: GOOGLE_CLIENT_SECRET
                  name: setupshowroom-backend-secret
            - name: S3_BUCKET
              valueFrom:
                secretKeyRef:
                  key: BUCKET_NAME
                  name: object-storage-secret
            - name: S3_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: ACCESS_KEY
                  name: object-storage-secret
            - name: S3_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: SECRET_KEY
                  name: object-storage-secret
            - name: S3_ENDPOINT
              value: <YOUR_S3_PROVIDER_URL>
          image: {{ .Values.setupshowroom.image.repository }}:{{ .Values.imageTag }}
          imagePullPolicy: Always
          name: setupshowroom-backend
          ports:
            - containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              port: 8080
              path: /actuator/health/liveness
            initialDelaySeconds: 15
            periodSeconds: 5
            failureThreshold: 5
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              port: 8080
              path: /actuator/health/readiness
            initialDelaySeconds: 15
            periodSeconds: 5
            failureThreshold: 5
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 1500m
              memory: 1024Mi
            requests:
              cpu: 150m
              memory: 320Mi
      imagePullSecrets:
        - name: repsy-registry-credentials #docker images stores in https://repsy.io
